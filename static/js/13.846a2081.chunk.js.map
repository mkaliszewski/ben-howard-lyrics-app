{"version":3,"sources":["pages/songs/songs.page.jsx","pages/songs/songs.container.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","redux/albums/albums.selectors.js","with-spinner/with-spinner.component.jsx"],"names":["SongsListPage","lazy","LyricsPage","SongsPage","match","className","fallback","exact","path","component","mapStateToProps","createStructuredSelector","isLoading","state","selectAreAlbumsLoaded","SongsPageContainer","compose","connect","WithSpinner","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","selectAlbumsData","albums","selectData","createSelector","albumsData","data","isFetching","selectAlbums","map","selectCurrentAlbum","currentAlbum","selectCurrentSongs","songs","selectAllSongs","album","flat","selectSong","songUrlParam","find","song","Number","selectAlbum","albumUrlParam","WrappedComponent","otherProps"],"mappings":"yPAOMA,EAAgBC,gBAAK,kBAAM,iCAC3BC,EAAaD,gBAAK,kBAAM,iCAYfE,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACd,yBAAKC,UAAU,aACf,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKJ,EAAMI,MAAQC,UAAWT,IAC/C,kBAAC,IAAD,CAAOQ,KAAI,UAAKJ,EAAMI,KAAX,YAA2BC,UAAWP,OCHnDQ,EAAkBC,YAAyB,CAC7CC,UAAW,SAAAC,GAAK,OAAKC,YAAsBD,MAIzCE,EAAqBC,YACvBC,YAAQP,GACRQ,IAFuBF,CAGzBb,GAEaY,a,gCCpBA,SAASI,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,EAjBT,mC,gCEAA,0PAGMW,EAAmB,SAAAtB,GAAK,OAAIA,EAAMuB,QAG3BC,EAAaC,YACtB,CAACH,IACD,SAAAI,GAAU,OAAIA,EAAWH,UAUhBtB,GANmBwB,YAC5B,CAACH,IACD,SAAAK,GAAI,OAAIA,EAAKC,cAIoBH,YACjC,CAACH,IACD,SAAAK,GAAI,QAAMA,EAAKJ,WAKNM,EAAeJ,YACxB,CAACD,IACD,SAAAD,GAAM,OAAIA,EAASV,OAAOC,KAAKS,GAAQO,KAAI,SAAArB,GAAG,OAAIc,EAAOd,MAAQ,MAIxDsB,EAAqBN,YAC9B,CAACH,IACD,SAAAC,GAAM,OAAIA,EAAOS,gBAGRC,EAAqBR,YAC9B,CAACM,IACD,SAAAC,GAAY,OAAIA,EAAaE,SAIpBC,EAAiBV,YAC1B,CAACI,IACD,SAAAO,GAAK,OAAIA,EAAMN,KAAI,SAAAM,GAAK,OAAIA,EAAMF,SAAOG,UAKhCC,EAAa,SAAAC,GAAY,OACtCd,YACI,CAACU,IACD,SAAAD,GAAK,OAAKA,EAAQA,EAAMM,MAAK,SAAAC,GAAI,OAAIA,EAAI,KAAWC,OAAOH,MAAiB,SAGnEI,EAAc,SAAAC,GAAa,OACpCnB,YACA,CAACI,IACD,SAAAN,GAAM,OAAKA,EAASA,EAAOiB,MAAK,SAAAJ,GAAK,OAAIA,EAAK,KAAWM,OAAOE,MAAkB,U,oEClDvEvC,IALK,SAAAwC,GAAgB,OAAI,YAAmC,IAAhC9C,EAA+B,EAA/BA,UAAc+C,EAAiB,6BACtE,OAAO/C,EAAY,kBAAC,IAAD,MAAa,kBAAC8C,EAAqBC","file":"static/js/13.846a2081.chunk.js","sourcesContent":["import React, {lazy, Suspense} from 'react';\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport './songs.page.styles.scss'\r\nimport Spinner from '../../components/spiner/spiner.component';\r\n\r\n\r\nconst SongsListPage = lazy(() => import('../songs-list/songs-list.page'))\r\nconst LyricsPage = lazy(() => import('../lyrics/lyrics.page'))\r\n\r\nconst SongsPage = ({ match }) =>(\r\n    <div className=\"songspage\">\r\n    <Suspense fallback={<Spinner/>}>\r\n        <Route exact path={`${match.path}`} component={SongsListPage}/>\r\n        <Route path={`${match.path}/:songId`} component={LyricsPage}/>\r\n        </Suspense>\r\n    </div>\r\n    \r\n)\r\n\r\nexport default SongsPage;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectAreAlbumsLoaded } from '../../redux/albums/albums.selectors';\r\nimport WithSpinner from '../../with-spinner/with-spinner.component';\r\nimport SongsPage from './songs.page'\r\n\r\n//In this way we are wrapping HOC (withSpinner) with connect, so we get right props into WithSpinner without\r\n//having to pass it as a props in App.js.\r\n\r\n//we use state as a negation, since cSS passes state\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectAreAlbumsLoaded(state)\r\n})\r\n\r\n//compose curring it all. From right to left => conect((mapStateToProps)(WithSpinner(SongsPage)))\r\nconst SongsPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(SongsPage)\r\n\r\nexport default SongsPageContainer;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { createSelector } from 'reselect';\r\n\r\n\r\nconst selectAlbumsData = state => state.albums;\r\n\r\n//wybieramy obiekt z danymi\r\nexport const selectData = createSelector(\r\n    [selectAlbumsData],\r\n    albumsData => albumsData.albums\r\n)\r\n\r\n\r\nexport const selectIsFetching = createSelector(\r\n    [selectAlbumsData],\r\n    data => data.isFetching\r\n)\r\n\r\n//selecting boolean value of albums state\r\nexport const selectAreAlbumsLoaded = createSelector(\r\n    [selectAlbumsData],\r\n    data => !!data.albums\r\n)\r\n\r\n\r\n//zwracamy tablicę 3 obiektów\r\nexport const selectAlbums = createSelector(\r\n    [selectData],\r\n    albums => albums ? Object.keys(albums).map(key => albums[key]) : []\r\n)\r\n\r\n\r\nexport const selectCurrentAlbum = createSelector(\r\n    [selectAlbumsData],\r\n    albums => albums.currentAlbum\r\n)\r\n\r\nexport const selectCurrentSongs = createSelector(\r\n    [selectCurrentAlbum],\r\n    currentAlbum => currentAlbum.songs\r\n)\r\n\r\n\r\nexport const selectAllSongs = createSelector(\r\n    [selectAlbums],\r\n    album => album.map(album => album.songs).flat()\r\n)\r\n\r\n\r\n//Dynamic selectors\r\nexport const selectSong = songUrlParam =>\r\ncreateSelector(\r\n    [selectAllSongs],\r\n    songs => (songs ? songs.find(song => song[\"id\"] === Number(songUrlParam)) : null)\r\n)\r\n\r\nexport const selectAlbum = albumUrlParam =>\r\n    createSelector(\r\n    [selectAlbums],\r\n    albums => (albums ? albums.find(album => album[\"id\"] === Number(albumUrlParam)) : null)\r\n)","import React from \"react\";\r\nimport Spinner from '../components/spiner/spiner.component'\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinner/> : <WrappedComponent {...otherProps} />\r\n\r\n};\r\n\r\nexport default WithSpinner;\r\n"],"sourceRoot":""}